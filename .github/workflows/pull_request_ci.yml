name: Pull Request / Dev CI

on:
    pull_request:
        branches:
            - dev

env:
    # User specified
    # Empty

    # Secrets
    GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}
    CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    # Automatic
    GITHUB_PUSH_BEFORE_SHA: ${{ github.event.before }}
    GITHUB_PUSH_BASE_SHA: ${{ github.event.base }}
    GITHUB_PULL_BASE_SHA: ${{ github.event.pull_request.base.sha }}
    GITHUB_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}

jobs:
    scan-code:
        name: GitGuardian scan
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0 # fetch all history so multiple commits can be scanned
            - name: GitGuardian scan
              uses: GitGuardian/ggshield-action@master

    check-style-frontend:
        name: Check frontend code style
        needs: scan-code
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@main
              with:
                  node-version: lts/*
                  cache: npm
            - run: npm ci
            - run: npm run prettier:frontend

    frontend-lint:
        name: Lint frontend
        needs: scan-code
        runs-on: ubuntu-latest

        defaults:
            run:
                working-directory: frontend

        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@main
              with:
                  node-version: lts/*
                  cache: npm
            - run: npm ci
            - run: npm run lint -- --max-warnings=0

    frontend-test:
        name: Test frontend
        runs-on: ubuntu-latest
        needs: [check-style-frontend, frontend-lint]

        defaults:
            run:
                working-directory: frontend

        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@main
              with:
                  node-version: lts/*
                  cache: npm
            - run: npm ci
            - run: npm run test:ci
            - uses: codecov/codecov-action@v3
              with:
                  token: ${{ env.CODECOV_TOKEN }}
                  flags: dev,unit,frontend
                  fail_ci_if_error: true

    check-style-backend:
        name: Check backend code style
        needs: scan-code
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@main
              with:
                  node-version: lts/*
                  cache: npm
            - run: npm ci
            - run: npm run prettier:backend

    backend-lint:
        name: Lint backend
        needs: scan-code
        runs-on: ubuntu-latest

        defaults:
            run:
                working-directory: backend

        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@main
              with:
                  node-version: lts/*
                  cache: npm
            - run: npm ci
            - run: npm run lint

    backend-validate-swagger:
        name: Validate Swagger/OpenAPI
        needs: scan-code
        runs-on: ubuntu-latest

        defaults:
            run:
                working-directory: backend

        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@main
              with:
                  node-version: lts/*
                  cache: npm
            - run: npx swagger-cli validate ./src/routes/v1/swagger_api_v1.json --yes

    backend-test:
        name: Test backend
        needs: [check-style-backend, backend-lint, backend-validate-swagger]
        runs-on: ubuntu-latest

        defaults:
            run:
                working-directory: backend

        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@main
              with:
                  node-version: lts/*
                  cache: npm
            - run: npm ci
            - run: npm run test:coverage
            - uses: codecov/codecov-action@v3
              with:
                  token: ${{ env.CODECOV_TOKEN }}
                  flags: dev,unit,backend
                  fail_ci_if_error: true
